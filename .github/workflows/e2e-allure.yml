name: E2E Tests & Allure Report

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # PR + main: just run the WDIO tests
  e2e:
    name: Run WDIO Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: npm run start &       # Spins up the server in background
      - run: npx wait-on http://localhost:3000
      - run: npm run wdio:e2e

  # Only on pushes to main: build, test, generate Allure, then deploy
  pages:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    name: Publish Allure to GitHub Pages
    environment:
      name: github-pages
      url: https://Afroid.github.io/i75-recap-site/
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
      - run: npm ci

      # Install Playwright browsers
      - run: npx playwright install --with-deps

      - run: npm run build
      - run: npm run start &
      - run: npx wait-on http://localhost:3000

      # Run both frameworks into the same allure-results/
      - run: npm run wdio:e2e          # reâ€‘runs tests and generates allure-results/
      - run: npm run pw:e2e

      # Generate & publish a single combined report
      - run: npx allure generate allure-results --clean -o allure-report
      - uses: peaceiris/actions-gh-pages@v3
        with:
          # The token to authenticate the push
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # Branch and folder to publish
          publish_branch: gh-pages
          publish_dir: ./allure-report
          # Commit as the Actions bot
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
